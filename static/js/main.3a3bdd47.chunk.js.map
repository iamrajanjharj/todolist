{"version":3,"sources":["firebase.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","React","useState","todos","setTodos","todo","setTodo","todoEditing","setTodoEditing","editingText","setEditingText","db","firestore","collection","useEffect","onSnapshot","querySnapshot","items","forEach","doc","push","data","todoStyle","backgroundColor","color","width","padding","marginLeft","marginTop","notCompText","fontSize","fontWeight","compCheck","delLink","textDecoration","editStyle","className","style","fontFamily","onSubmit","e","preventDefault","newTodo","id","uuidv4","completed","set","type","height","border","borderRadius","onChange","target","value","map","x","get","then","exists","ref","update","checked","href","onClick","delete","updatedTodo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a3bdd47.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDNxd5aQfjTlNCr2_RwGaW9BUJEDGENPY8\",\r\n    authDomain: \"todolist-acfda.firebaseapp.com\",\r\n    projectId: \"todolist-acfda\",\r\n    storageBucket: \"todolist-acfda.appspot.com\",\r\n    messagingSenderId: \"9343675105\",\r\n    appId: \"1:9343675105:web:a65e811b88536227fba5a0\",\r\n    measurementId: \"G-2FHW6L4S5C\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export default firebase;","import React, { useEffect } from 'react';\nimport firebase from './firebase';\nimport './App.css';\nimport {v4 as uuidv4} from 'uuid';\n\nfunction App() {\n  const [todos, setTodos] = React.useState([])\n  const [todo, setTodo] = React.useState(\"\")\n  const [todoEditing, setTodoEditing] = React.useState(null)\n  const [editingText, setEditingText] = React.useState(\"\")\n\n  const db = firebase.firestore().collection(\"todos\")\n\n  useEffect(() => {\n    db.onSnapshot((querySnapshot) => {\n      const items = [];\n      querySnapshot.forEach((doc) => {\n        items.push(doc.data())\n      });\n    setTodos(items)\n    });\n  });\n\n  function handleSubmit(e)\n  {\n    e.preventDefault()\n\n    const newTodo = {\n      id: uuidv4(),\n      todo: todo,\n      completed: false,\n    }\n\n    db.doc(newTodo.id).set(newTodo)\n\n    setTodo(\"\")\n  }\n\n  function deleteTodo(id)\n  {\n    db.doc(id).delete()\n  }\n\n  function completeTodo(id)\n  {\n    db.doc(id).get().then((x) => {\n        if (x.exists)\n          x.ref.update({ completed: !x.data().completed });\n    })\n  }\n\n  function editTodo(id)\n  {\n    const updateTodos = [...todos].map((todo) => {\n      if(todo.id === id)\n      {\n        const updatedTodo = {\n          todo: editingText\n        }\n\n        db.doc(id).update(updatedTodo)\n      }\n    })\n\n    setTodoEditing(null)\n    setEditingText(\"\")\n  }\n\n  const headerStyle = {\n    color: \"white\",\n    backgroundColor: \"DodgerBlue\",\n    padding: \"10px\",\n    fontFamily: \"Arial\",\n    fontSize: \"300%\"\n  };\n\n  const todoField = {\n    width: \"30%\",\n    height: \"25px\",\n    border: \"1px solid #000\",\n    borderRadius: \"5px\"\n  };\n\n  const todoStyle = {\n    backgroundColor: \"#e96969bb\",\n    color: \"white\",\n    width: \"50%\",\n    padding: \"10px\",\n    marginLeft: \"25%\",\n    marginTop: \"1%\"\n  };\n\n  const compText = {\n    textDecoration:\"line-through\",\n    fontSize:\"120%\",\n    fontWeight:\"Bold\"\n  };\n\n  const notCompText = {\n    fontSize:\"120%\",\n    fontWeight:\"Bold\"\n  };\n\n  const compCheck = {\n    \n  };\n\n  const delLink = {\n    textDecoration: \"none\",\n    marginLeft: \"15px\",\n  };\n\n  const editStyle = {\n    marginLeft: \"15px\"\n  };\n\n  return (\n\n    <div className=\"App\">\n      \n      <h1 style={headerStyle}>Todo List</h1>\n      \n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" style={todoField} onChange={(e) => setTodo(e.target.value)} value={todo} /><button type=\"submit\">Add</button>\n      </form>\n      \n      {todos.map((x) => \n      <div key={x.id} style={todoStyle} className=\"todoTask\">\n\n      <input type=\"checkbox\" style={compCheck} onChange={() => completeTodo(x.id)} checked={x.completed} />\n      \n      {todoEditing === x.id?(<input type=\"text\" onChange={(e) => setEditingText(e.target.value)} value={editingText} />):\n      (<span style={notCompText}>{x.todo}</span>)}\n          \n      \n      <a style={delLink} href=\"#\" onClick={() => deleteTodo(x.id)}>Delete</a> \n  \n      {todoEditing === x.id?\n      (<button onClick={() => editTodo(x.id)}>Save</button>):\n      (<button style={editStyle} onClick={() => setTodoEditing(x.id)}>Edit</button>)}\n      \n      \n      </div>)}\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}