{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","todos","setTodos","todo","setTodo","todoEditing","setTodoEditing","editingText","setEditingText","todoStyle","backgroundColor","color","width","padding","marginLeft","marginTop","notCompText","fontSize","fontWeight","compCheck","delLink","textDecoration","editStyle","className","style","fontFamily","onSubmit","e","preventDefault","newTodo","id","Date","getTime","text","completed","concat","type","height","border","borderRadius","onChange","target","value","map","x","updateTodos","completeTodo","checked","href","onClick","filter","deleteTodo","editTodo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAAe,I,YCoIAA,MAhIf,WAAgB,IAAD,EACaC,IAAMC,SAAS,IAD5B,mBACNC,EADM,KACCC,EADD,OAEWH,IAAMC,SAAS,IAF1B,mBAENG,EAFM,KAEAC,EAFA,OAGyBL,IAAMC,SAAS,MAHxC,mBAGNK,EAHM,KAGOC,EAHP,OAIyBP,IAAMC,SAAS,IAJxC,mBAINO,EAJM,KAIOC,EAJP,KAkEPC,EAAY,CAChBC,gBAAiB,YACjBC,MAAO,QACPC,MAAO,MACPC,QAAS,OACTC,WAAY,MACZC,UAAW,MASPC,EAAc,CAClBC,SAAS,OACTC,WAAW,QAGPC,EAAY,GAIZC,EAAU,CACdC,eAAgB,OAChBP,WAAY,QAGRQ,EAAY,CAChBR,WAAY,QAGd,OAEE,sBAAKS,UAAU,MAAf,UACE,oBAAIC,MAnDY,CAClBb,MAAO,QACPD,gBAAiB,aACjBG,QAAS,OACTY,WAAY,QACZR,SAAU,QA8CR,uBACA,uBAAMS,SAjGV,SAAsBC,GAEpBA,EAAEC,iBAEF,IAAMC,EAAU,CACdC,IAAI,IAAIC,MAAOC,UACfC,KAAM9B,EACN+B,WAAW,GAGbhC,EAAS,YAAID,EAAMkC,OAAON,KAC1BzB,EAAQ,KAsFN,UACE,uBAAOgC,KAAK,OAAOZ,MA7CP,CAChBZ,MAAO,MACPyB,OAAQ,OACRC,OAAQ,iBACRC,aAAc,OAyC2BC,SAAU,SAACb,GAAD,OAAOvB,EAAQuB,EAAEc,OAAOC,QAAQA,MAAOvC,IAAQ,wBAAQiC,KAAK,SAAb,oBAE/FnC,EAAM0C,KAAI,SAACC,GAAD,OACX,sBAAgBpB,MAAOf,EAAWc,UAAU,WAA5C,UAEA,uBAAOa,KAAK,WAAWZ,MAAOL,EAAWqB,SAAU,kBAnFvD,SAAsBV,GAEpB,IAAMe,EAAc,YAAI5C,GAAO0C,KAAI,SAACxC,GAIlC,OAHGA,EAAK2B,KAAOA,IACb3B,EAAK+B,WAAa/B,EAAK+B,WAElB/B,KAGTD,EAAS2C,GA0EkDC,CAAaF,EAAEd,KAAKiB,QAAS5C,EAAK+B,YAE1F7B,IAAgBuC,EAAEd,GAAI,uBAAOM,KAAK,OAAOI,SAAU,SAACb,GAAD,OAAOnB,EAAemB,EAAEc,OAAOC,QAAQA,MAAOnC,IACjG,sBAAMiB,MAAOR,EAAb,SAA2B4B,EAAEX,OAG9B,mBAAGT,MAAOJ,EAAS4B,KAAK,IAAIC,QAAS,kBA/FzC,SAAoBnB,GAElB,IAAMe,EAAc,YAAI5C,GAAOiD,QAAO,SAAC/C,GAAD,OAAUA,EAAK2B,KAAOA,KAC5D5B,EAAS2C,GA4FoCM,CAAWP,EAAEd,KAAxD,oBAECzB,IAAgBuC,EAAEd,GAClB,wBAAQmB,QAAS,kBAhFtB,SAAkBnB,GAEhB,IAAMe,EAAc,YAAI5C,GAAO0C,KAAI,SAACxC,GAGlC,OAFGA,EAAK2B,KAAOA,IACb3B,EAAK8B,KAAO1B,GACPJ,KAGTD,EAAS2C,GACTvC,EAAe,MACfE,EAAe,IAsEW4C,CAASR,EAAEd,KAAlC,kBACA,wBAAQN,MAAOF,EAAW2B,QAAS,kBAAM3C,EAAesC,EAAEd,KAA1D,oBAZSc,EAAEd,WCnGHuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8c6c52eb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  const [todos, setTodos] = React.useState([])\n  const [todo, setTodo] = React.useState(\"\")\n  const [todoEditing, setTodoEditing] = React.useState(null)\n  const [editingText, setEditingText] = React.useState(\"\")\n\n  function handleSubmit(e)\n  {\n    e.preventDefault()\n\n    const newTodo = {\n      id: new Date().getTime(),\n      text: todo,\n      completed: false,\n    }\n\n    setTodos([...todos.concat(newTodo)])\n    setTodo(\"\")\n  }\n\n  function deleteTodo(id)\n  {\n    const updateTodos = [...todos].filter((todo) => todo.id !== id)\n    setTodos(updateTodos)\n  }\n\n  function completeTodo(id)\n  {\n    const updateTodos = [...todos].map((todo) => {\n      if(todo.id === id)\n        todo.completed = !todo.completed\n      \n      return todo\n    })\n\n    setTodos(updateTodos)\n  }\n\n  function editTodo(id)\n  {\n    const updateTodos = [...todos].map((todo) => {\n      if(todo.id === id)\n        todo.text = editingText\n      return todo\n    })\n\n    setTodos(updateTodos)\n    setTodoEditing(null)\n    setEditingText(\"\")\n  }\n\n  const headerStyle = {\n    color: \"white\",\n    backgroundColor: \"DodgerBlue\",\n    padding: \"10px\",\n    fontFamily: \"Arial\",\n    fontSize: \"300%\"\n  };\n\n  const todoField = {\n    width: \"30%\",\n    height: \"25px\",\n    border: \"1px solid #000\",\n    borderRadius: \"5px\"\n  };\n\n  const todoStyle = {\n    backgroundColor: \"#e96969bb\",\n    color: \"white\",\n    width: \"50%\",\n    padding: \"10px\",\n    marginLeft: \"25%\",\n    marginTop: \"1%\"\n  };\n\n  const compText = {\n    textDecoration:\"line-through\",\n    fontSize:\"120%\",\n    fontWeight:\"Bold\"\n  };\n\n  const notCompText = {\n    fontSize:\"120%\",\n    fontWeight:\"Bold\"\n  };\n\n  const compCheck = {\n    \n  };\n\n  const delLink = {\n    textDecoration: \"none\",\n    marginLeft: \"15px\",\n  };\n\n  const editStyle = {\n    marginLeft: \"15px\"\n  };\n\n  return (\n\n    <div className=\"App\">\n      <h1 style={headerStyle}>Todo List</h1>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" style={todoField} onChange={(e) => setTodo(e.target.value)} value={todo} /><button type=\"submit\">Add</button>\n      </form>\n      {todos.map((x) => \n      <div key={x.id} style={todoStyle} className=\"todoTask\">\n\n      <input type=\"checkbox\" style={compCheck} onChange={() => completeTodo(x.id)} checked={todo.completed} />\n      \n      {todoEditing === x.id?(<input type=\"text\" onChange={(e) => setEditingText(e.target.value)} value={editingText} />):\n      (<span style={notCompText}>{x.text}</span>)}\n          \n      \n      <a style={delLink} href=\"#\" onClick={() => deleteTodo(x.id)}>Delete</a> \n  \n      {todoEditing === x.id?\n      (<button onClick={() => editTodo(x.id)}>Save</button>):\n      (<button style={editStyle} onClick={() => setTodoEditing(x.id)}>Edit</button>)}\n      \n      \n      </div>)}\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}